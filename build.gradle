apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'codenarc'
apply plugin: 'bintray'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:0.3'
    }
}

repositories {
    jcenter()
    mavenCentral()
}

group = 'com.tkruse.gradle'
version = '0.2.0-SNAPSHOT'

def compatibilityVersion = 1.7
sourceCompatibility = compatibilityVersion
targetCompatibility = compatibilityVersion


codenarcMain.maxPriority2Violations = 3
codenarcTest.maxPriority2Violations = 1


jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Groovysh plugin',
                'Implementation-Version': version,
                'Built-By': System.getProperty('user.name'),
                'Built-Date': new Date(),
                'Built-JDK': System.getProperty('java.version'),
                'Built-Gradle': gradle.gradleVersion
    }
}

task sourcesJar( type: Jar ) {
    classifier 'sources'
    from sourceSets.main.allSource
}

task groovydocJar( type: Jar ) {
    classifier 'javadoc'
    from groovydoc
}

artifacts {
    archives sourcesJar
    archives groovydocJar
}

task wrapper(type: Wrapper, description: 'Generates the gradle wrapper.') {
    gradleVersion = '1.12'
}

test {
    testLogging {
        exceptionFormat "full" // default is "short"
    }
}

dependencies {
    compile gradleApi()
    compile "jline:jline:1.0"
    compile('org.codehaus.groovy:groovy-all:2.2.2') { force = true }
    runtime('commons-cli:commons-cli:1.2')
    testCompile("junit:junit-dep:4.11")
}

publishing {
    publications {
        mavenJava( MavenPublication ) {
            from components.java
            artifact sourcesJar
            artifact groovydocJar
        }
    }
}

bintray {
    user = project.hasProperty( 'bintrayUser' ) ? project.getProperty( 'bintrayUser' ) : null
    key = project.hasProperty( 'bintrayKey' ) ? project.getProperty( 'bintrayKey' ) : null
    publications = ['mavenJava']

    pkg {
        repo = 'maven'
        name = 'gradle-groovysh-plugin'
        desc = 'A gradle plugin to start command-line shells with your Application classes.'
        licenses = ['Apache-2.0']
        labels = ['groovysh', 'groovy', 'shell']
    }

    // dryRun = true
}
